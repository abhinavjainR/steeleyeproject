{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rehaa\\\\Desktop\\\\SteelEye\\\\steeleye\\\\src\\\\steeleyecode\\\\List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, memo } from 'react';\nimport PropTypes from 'prop-types'; // Single List Item\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WrappedSingleListItem = _ref => {\n  let {\n    index,\n    isSelected,\n    onClickHandler,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    style: {\n      backgroundColor: isSelected ? 'green' : 'red'\n    },\n    onClick: onClickHandler(Boolean(index)),\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = WrappedSingleListItem;\nWrappedSingleListItem.propTypes = {\n  index: PropTypes.number,\n  isSelected: PropTypes.bool,\n  onClickHandler: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired\n};\nconst SingleListItem = /*#__PURE__*/memo(WrappedSingleListItem); // List Component\n\n_c2 = SingleListItem;\n\nconst WrappedListComponent = _ref2 => {\n  _s();\n\n  let {\n    items\n  } = _ref2;\n  const [selectedIndex, setSelectedIndex] = useState();\n  useEffect(() => {\n    //we have to pass true \n    setSelectedIndex(true);\n  }, [items]);\n\n  const handleClick = index => {\n    //Data type boolean is required\n    setSelectedIndex(Boolean(index));\n    console.log(\"Index Value: \" + index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    style: {\n      textAlign: 'left'\n    },\n    children: items.map((item, index) => /*#__PURE__*/_jsxDEV(SingleListItem, {\n      onClickHandler: () => handleClick(index),\n      text: item.text,\n      index: index,\n      isSelected: selectedIndex //Key value pair is missing\n\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WrappedListComponent, \"MPNY71OLYTCq2s8Z+AOBTF2Udxc=\");\n\n_c3 = WrappedListComponent;\nWrappedListComponent.propTypes = {\n  //It should be arrayOf instead of shapeOf\n  items: PropTypes.arrayOf(PropTypes.shape({\n    text: PropTypes.string.isRequired\n  }))\n}; //Fixed items :[null]\n\nWrappedListComponent.defaultProps = {\n  items: [{\n    index: 1,\n    text: \"Abhinav\"\n  }, {\n    index: 2,\n    text: \"Jain\"\n  }]\n};\nconst List = /*#__PURE__*/memo(WrappedListComponent);\n_c4 = List;\nexport default List;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"WrappedSingleListItem\");\n$RefreshReg$(_c2, \"SingleListItem\");\n$RefreshReg$(_c3, \"WrappedListComponent\");\n$RefreshReg$(_c4, \"List\");","map":{"version":3,"names":["React","useState","useEffect","memo","PropTypes","WrappedSingleListItem","index","isSelected","onClickHandler","text","backgroundColor","Boolean","propTypes","number","bool","func","isRequired","string","SingleListItem","WrappedListComponent","items","selectedIndex","setSelectedIndex","handleClick","console","log","textAlign","map","item","arrayOf","shape","defaultProps","List"],"sources":["C:/Users/rehaa/Desktop/SteelEye/steeleye/src/steeleyecode/List.js"],"sourcesContent":["import React, { useState, useEffect, memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Single List Item\r\nconst WrappedSingleListItem = ({\r\n  index,\r\n  isSelected,\r\n  onClickHandler,\r\n  text,\r\n}) => {\r\n  return (\r\n    <li\r\n      style={{ backgroundColor: isSelected ? 'green' : 'red'}}\r\n      onClick={onClickHandler(Boolean(index))}\r\n    >\r\n      {text}\r\n    </li>\r\n  );\r\n};\r\nWrappedSingleListItem.propTypes = {\r\n  index: PropTypes.number,\r\n  isSelected: PropTypes.bool,\r\n  onClickHandler: PropTypes.func.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n};\r\nconst SingleListItem = memo(WrappedSingleListItem);\r\n\r\n// List Component\r\nconst WrappedListComponent = ({items}) => {\r\n  const [selectedIndex, setSelectedIndex] = useState();\r\n\r\n  useEffect(() => {\r\n    //we have to pass true \r\n    setSelectedIndex(true);\r\n  }, [items]);\r\n\r\n  const handleClick = index => {\r\n    //Data type boolean is required\r\n    setSelectedIndex(Boolean(index));\r\n\r\n    console.log(\"Index Value: \"+index);\r\n  };\r\n\r\n  return (\r\n    <ul style={{ textAlign: 'left' }}>\r\n      {items.map((item, index) => (\r\n        <SingleListItem\r\n          onClickHandler={() => handleClick(index)}\r\n          text={item.text}\r\n          index={index}\r\n          isSelected={selectedIndex}\r\n          //Key value pair is missing\r\n          key={index}\r\n        />\r\n      ))}\r\n    </ul>\r\n  )\r\n};\r\n\r\nWrappedListComponent.propTypes = {\r\n\r\n    //It should be arrayOf instead of shapeOf\r\n    \r\n  items: PropTypes.arrayOf(PropTypes.shape({\r\n    text: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\n//Fixed items :[null]\r\nWrappedListComponent.defaultProps = {\r\n  items:  [\r\n    { index: 1, text: \"Abhinav\" },\r\n    { index: 2, text: \"Jain\" },\r\n    \r\n\r\n  ]\r\n};\r\n\r\nconst List = memo(WrappedListComponent);\r\n\r\nexport default List;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,IAArC,QAAiD,OAAjD;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;;;AACA,MAAMC,qBAAqB,GAAG,QAKxB;EAAA,IALyB;IAC7BC,KAD6B;IAE7BC,UAF6B;IAG7BC,cAH6B;IAI7BC;EAJ6B,CAKzB;EACJ,oBACE;IACE,KAAK,EAAE;MAAEC,eAAe,EAAEH,UAAU,GAAG,OAAH,GAAa;IAA1C,CADT;IAEE,OAAO,EAAEC,cAAc,CAACG,OAAO,CAACL,KAAD,CAAR,CAFzB;IAAA,UAIGG;EAJH;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAdD;;KAAMJ,qB;AAeNA,qBAAqB,CAACO,SAAtB,GAAkC;EAChCN,KAAK,EAAEF,SAAS,CAACS,MADe;EAEhCN,UAAU,EAAEH,SAAS,CAACU,IAFU;EAGhCN,cAAc,EAAEJ,SAAS,CAACW,IAAV,CAAeC,UAHC;EAIhCP,IAAI,EAAEL,SAAS,CAACa,MAAV,CAAiBD;AAJS,CAAlC;AAMA,MAAME,cAAc,gBAAGf,IAAI,CAACE,qBAAD,CAA3B,C,CAEA;;MAFMa,c;;AAGN,MAAMC,oBAAoB,GAAG,SAAa;EAAA;;EAAA,IAAZ;IAACC;EAAD,CAAY;EACxC,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCrB,QAAQ,EAAlD;EAEAC,SAAS,CAAC,MAAM;IACd;IACAoB,gBAAgB,CAAC,IAAD,CAAhB;EACD,CAHQ,EAGN,CAACF,KAAD,CAHM,CAAT;;EAKA,MAAMG,WAAW,GAAGjB,KAAK,IAAI;IAC3B;IACAgB,gBAAgB,CAACX,OAAO,CAACL,KAAD,CAAR,CAAhB;IAEAkB,OAAO,CAACC,GAAR,CAAY,kBAAgBnB,KAA5B;EACD,CALD;;EAOA,oBACE;IAAI,KAAK,EAAE;MAAEoB,SAAS,EAAE;IAAb,CAAX;IAAA,UACGN,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAOtB,KAAP,kBACT,QAAC,cAAD;MACE,cAAc,EAAE,MAAMiB,WAAW,CAACjB,KAAD,CADnC;MAEE,IAAI,EAAEsB,IAAI,CAACnB,IAFb;MAGE,KAAK,EAAEH,KAHT;MAIE,UAAU,EAAEe,aAJd,CAKE;;IALF,GAMOf,KANP;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CA7BD;;GAAMa,oB;;MAAAA,oB;AA+BNA,oBAAoB,CAACP,SAArB,GAAiC;EAE7B;EAEFQ,KAAK,EAAEhB,SAAS,CAACyB,OAAV,CAAkBzB,SAAS,CAAC0B,KAAV,CAAgB;IACvCrB,IAAI,EAAEL,SAAS,CAACa,MAAV,CAAiBD;EADgB,CAAhB,CAAlB;AAJwB,CAAjC,C,CASA;;AACAG,oBAAoB,CAACY,YAArB,GAAoC;EAClCX,KAAK,EAAG,CACN;IAAEd,KAAK,EAAE,CAAT;IAAYG,IAAI,EAAE;EAAlB,CADM,EAEN;IAAEH,KAAK,EAAE,CAAT;IAAYG,IAAI,EAAE;EAAlB,CAFM;AAD0B,CAApC;AASA,MAAMuB,IAAI,gBAAG7B,IAAI,CAACgB,oBAAD,CAAjB;MAAMa,I;AAEN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}